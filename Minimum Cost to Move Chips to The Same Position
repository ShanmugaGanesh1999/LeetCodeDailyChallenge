C++

class Solution {
public:
    int minCostToMoveChips(vector<int>& P) {
        int oddPos = 0, evenPos = 0;
        for(int p : P)
            p & 1 ? oddPos++ : evenPos++;
        return min(oddPos, evenPos);
    }
};

Java

class Solution {
    public int minCostToMoveChips(int[] position) {
        int even = 0, odd = 0;
        
        for(int p : position){
            if(p%2==0) even++;
            else odd++;
        }
        
        return Math.min(even,odd);
    }
}

Python

class Solution:
    def minCostToMoveChips(self, P):
        pos = [0, 0]
        for p in P:
            pos[p & 1] += 1
        return min(pos)

