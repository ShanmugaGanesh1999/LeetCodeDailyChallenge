Js:-


var numDecodings = function(s) {
  let a = 1, b = 0, c = 0, aa;
  [...s].forEach(n => (
    n === '*' && (aa = 9 * a + 9 * b + 6 * c, b = c = a),
    n !== '*' && (
      aa = (n !== '0') * a + b + (n < '7') * c,
      b = (n === '1') * a, c = (n === '2') * a
    ),
    a = aa % 1000000007
  ));
  return a;
};


C++:-


class Solution {
public:
    int numDecodings(string s) {
       long long  int i,j,k,l,n,m,c,z;
        n=s.length();
        m=1e9+7;
        vector<long long int>ex(n+1,0);
        vector<long long int>in(n+1,0);
        ex[0]=1;
        for(i=0;i<n;i++){
            if(i==0){
                if(s[i]=='0')
                    return 0;
                if(s[i]=='*')
                    ex[i+1]=9;
                else
                ex[i+1]=1;
            }
            else{
                if(s[i]!='0')
                ex[i+1]=(ex[i]+in[i])%m;
                if(s[i]=='*')
                    ex[i+1]=(9*ex[i+1]%m)%m;
   
                if(s[i-1]=='1'){
                    if(s[i]=='*')
                    in[i+1]=(9*(ex[i-1]%m+in[i-1]%m)%m)%m;
                    else
                    in[i+1]=(ex[i-1]+in[i-1])%m;
                }
                else if(s[i-1]=='2' && (s[i]=='0'||s[i]=='1'||s[i]=='2'||s[i]=='3'||s[i]=='4'||s[i]=='5'||s[i]=='6'||s[i]=='*')){
                    if(s[i]=='*')
                    in[i+1]=(6*(ex[i-1]%m+in[i-1]%m)%m)%m;
                    else
                    in[i+1]=(ex[i-1]%m+in[i-1]%m)%m;
                }
                else if(s[i-1]=='*'){
                    if(s[i]=='*')
                        in[i+1]=(15*(ex[i-1]%m+in[i-1]%m)%m)%m;
                    else if(s[i]=='1'||s[i]=='2'||s[i]=='3'||s[i]=='4'||s[i]=='5'||s[i]=='6'||s[i]=='0')
                        in[i+1]=(2*(ex[i-1]+in[i-1])%m)%m;
                    else
                        in[i+1]=((ex[i-1]%m+in[i-1]%m))%m;
                }
                
            }
        }
        return (ex[n]+in[n])%m;
    }
};


Python:-


class Solution(object):
    def numDecodings(self, S):
        mod, dp = 10**9 + 7, [1, 0, 0]
        for c in S:
            dp_new = [0,0,0]
            if c == '*':
                dp_new[0] = 9*dp[0] + 9*dp[1] + 6*dp[2]
                dp_new[1] = dp[0]
                dp_new[2] = dp[0]
            else:
                dp_new[0]  = (c > '0') * dp[0] + dp[1] + (c <= '6') * dp[2]
                dp_new[1]  = (c == '1') * dp[0]
                dp_new[2]  = (c == '2') * dp[0]
            dp = [i % mod for i in dp_new]
        return dp[0]
