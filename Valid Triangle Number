Java:-


class Solution {
    public int triangleNumber(int[] nums) {
        Arrays.sort(nums);
        int n = nums.length;
        int count = 0;
        for(int i = n-1;i>=2;i--){
            int l = 0;
            int r = i-1;
            while(l<r){
                if(nums[l]+nums[r]>nums[i]){
                    count = count + r-l;
                    r--;
                }else{
                    l++;
                }
            }
        }
        return count;
    }
}


C++:-


class Solution {
public:
    int triangleNumber(vector<int>& nums) {
        int res = 0, n = nums.size();
        
        sort(nums.begin(), nums.end());
        
        for (int i = n-1; i >= 0; i--) {
            int lo = 0, hi = i-1;
            
            while (lo < hi) {
                if (nums[lo] + nums[hi] > nums[i]) {
                    res += hi - lo;
                    hi--;
                }
                
                else lo++;
            }
        }
        
        return res;
    }
};


Python:-


def triangleNumber(self, nums: List[int]) -> int:
        count =0
        nums.sort()
        for k in range(len(nums)-1,1,-1):
            i=0                        
            j=k-1
            while i<j:
                if nums[i]+nums[j]>nums[k]:
                    count+=j-i
                    j-=1
                else: 
                    i+=1                   
        return count
