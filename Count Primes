Javascript Code:

var countPrimes = function(n) {
    let seen = new Uint8Array(n), ans = 0
    for (let num = 2; num < n; num++) {
        if (seen[num]) continue
        ans++
        for (let mult = num; mult < n; mult += num)
            seen[mult] = 1
    }
    return ans
};

Python Code:

class Solution:
    def countPrimes(self, n: int) -> int:
        seen, ans = [0] * n, 0
        for num in range(2, n):
            if seen[num]: continue
            ans += 1
            for mult in range(num, n, num):
                seen[mult] = 1
        return ans

Java Code:

class Solution {
    public int countPrimes(int n) {
        boolean[] seen = new boolean[n];
        int ans = 0;
        for (int num = 2; num < n; num++) {
            if (seen[num]) continue;
            ans += 1;
            for (int mult = num; mult < n; mult += num)
                seen[mult] = true;
        }
        return ans;
    }
}

C++ Code:

class Solution {
public:
    int countPrimes(int n) {
        vector<bool> seen(n, false);
        int ans = 0;
        for (int num = 2; num < n; num++) {
            if (seen[num]) continue;
            ans++;
            for (int mult = num; mult < n; mult += num)
                seen[mult] = true;
        }
        return ans;
    }
};
