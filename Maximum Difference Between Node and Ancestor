/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private int maxDiff = Integer.MIN_VALUE;
    
    public int maxAncestorDiff(TreeNode root) {
        dfs(root, root, root);
        return maxDiff;
    }
    
    public void dfs(TreeNode node, TreeNode maxNode, TreeNode minNode) {
        if (node == null) return;
        
        if (node.val > maxNode.val) maxNode = node;
        if (node.val < minNode.val) minNode = node;
        
        maxDiff = Math.max(maxDiff, Math.abs(maxNode.val - minNode.val));
        
        dfs(node.left, maxNode, minNode);
        dfs(node.right, maxNode, minNode);
    }
    
}
