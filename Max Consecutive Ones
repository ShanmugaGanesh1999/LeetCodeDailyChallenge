Python

class Solution:
    def findMaxConsecutiveOnes(self, nums):
        cur_max, gl_max = 0, 0
        for i in nums:
            if i == 1:
                cur_max += 1
                gl_max = max(gl_max, cur_max)
            else:
                cur_max = 0    
        return gl_max
        
Java

class Solution {
    public int findMaxConsecutiveOnes(int[] nums) {
         int cmax=0;
    int prev=0;
    
    for(int i=0;i<nums.length;i++)
    {
        
        if(nums[i]==1)
            cmax++;
        else if(nums[i]==0)
        {
            if(cmax>prev)
                prev=cmax;
            cmax=0;
            
        }
        
    }
    
    return prev>cmax?prev:cmax;
    }
}

C++

class Solution {
public:
    int findMaxConsecutiveOnes(vector<int>& nums) {
        int total = 0;
        int res = 0;
        
        for(auto n : nums) {
            if(n) {
                total++;
                res = max(res, total);
            } else {
                total = 0;
            }
        }
        
        return res;
    }
};

Js

var findMaxConsecutiveOnes = function(nums) {
  return nums.reduce(([max, streak], num) => {
    if (num) max = Math.max(max, ++streak)
    else streak = 0
    return [max, streak]
  }, [0, 0])[0]
};
